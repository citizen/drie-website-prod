<%= render "shared/header" %>
<%= render "shared/menu" %>
  <body>
    <div id="wrap">
        <br><br>
              <div class="section">
            <div class="container">
                <div class="row">
                    <div class="col-md-12 text-center">
                        <h1>drie_push</h1>

                        <h2>If you use git, you should be using drie_push.</h2>
 
 
<p><%= link_to image_tag("drie_push.png", alt: 'drie-push', class: 'img-responsive', :style=> ""), root_path %></p>

<p>
terminal
</p>


<pre>
<code class="language-css">

To install git: https://git-scm.com/book/en/v2/Getting-Started-Installing-Git<br>

to set up git: https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup<br>
  
to generate ssh keys: https://git-scm.com/book/en/v2/ <br>Git-on-the-Server-Generating-Your-SSH-Public-Key 
</p>

</code>
</pre>

<pre data-line="4, 6, 10-13">
<code class="language-css">

Use the below to sign up with drie and create your first app:

app_name=$(uuidgen)
git clone https://github.com/heroku/node-js-sample
cd node-js-sample
git remote add drie git@drieapp.co:demo-${app_name}
git push drie master  # <- wait for the build, the URL of your branch is printed to your terminal
curl master.demo-${app_name}.drieapp.co
once you're done, check out a branch called featurex and make a change:

git checkout -b featurex
vi index.js  # <- change the  text in response.send on line 8 to something else
git add index.js
git commit -m "good commit message"
# pro-tip: you don't need to specify the branch name if your push strategy is set to simple.
git push drie featurex # <- wait for the build, the URL of your branch is printed to your terminal
curl featurex.demo

</code>
</pre>


<p>What you're seeing in this demo is a functional proof of concept for the user experience we'll soon be rolling out to drie.

There are glaring holes like log retrieval but if you stay close to the happy path above you can probably have a good go at the POC without needing any of that missing functionality yet.

There is no cli to install. No sign-up to get started. Nothing but git, which you've almost certainly already got on your machine.

Deploying master will look similar to other platforms but what is unique to drie is testing a feature is as easy as creating a new branch, making your changes and pushing it. You can run as many features at the same time as you want to, just push a branch and it will be available at {branch}.{drie_repo}.drieapp.co. Use cases could be anything from different environments to different languages in branches.

Scaling is truly elastic. We create and destroy instances as required to serve requests (please don't load test, this POC is testing UX, not reliability under load).</p>



                    </div>
                </div>
            </div>
            </div>
        <%= render "shared/footer" %>
    </div>
    <%= render "hubspot" %>
    </body>
</html>